
import gradio as gr
import requests
import time
import threading
import os
from dotenv import load_dotenv

load_dotenv()
API_URL = os.getenv('API_URL', 'http://localhost:8000/run')
MODEL = os.getenv('MODEL_NAME', 'LLM')
PROJECT_NAME = os.getenv('PROJECT_NAME', 'Local LLM')
first_run = True

def run_analysis(code, mode):
    global first_run
    start = time.time()
    response_data = None

    if first_run:
        waiting_for_response = True

        def make_api_call():
            nonlocal waiting_for_response, response_data
            payload = {"code": code}
            try:
                response = requests.post(API_URL, json=payload).json()
                response_data = response
            finally:
                waiting_for_response = False

        thread = threading.Thread(target=make_api_call)
        thread.start()

        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–∞–π–º–µ—Ä, –ø–æ–∫–∞ –∂–¥–µ–º –æ—Ç–≤–µ—Ç
        while waiting_for_response:
            time_passed = round(time.time() - start, 2)
            yield f"‚è≥ –û–∂–∏–¥–∞–π—Ç–µ –æ—Ç–≤–µ—Ç–∞... ‚è±Ô∏è {time_passed} —Å–µ–∫"
            time.sleep(0.1)

        first_run = False

        # –§–æ—Ä–º–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç –ø–æ—Å–ª–µ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
        if response_data:
            duration = response_data.get("time", f"‚è±Ô∏è {round(time.time() - start, 2)} —Å–µ–∫")
            yield f"‚è±Ô∏è –í—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞: {duration}\n---\n{response_data.get('output', '[–ù–µ—Ç –æ—Ç–≤–µ—Ç–∞]')}"
        return

    # –î–ª—è –ø–æ—Å–ª–µ–¥—É—é—â–∏—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
    payload = {"code": code}
    response = requests.post(API_URL, json=payload).json()
    duration = response.get("time", f"‚è±Ô∏è {round(time.time() - start, 2)} —Å–µ–∫")
    yield f"‚è±Ô∏è –í—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞: {duration}\n---\n{response.get('output', '[–ù–µ—Ç –æ—Ç–≤–µ—Ç–∞]')}"

with gr.Blocks() as demo:
    gr.Markdown(f"# ‚öôÔ∏è {MODEL.upper()} ‚Äî LLM –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞ {PROJECT_NAME}")

    code_input = gr.Textbox(label="–ó–∞–ø—Ä–æ—Å –∏–ª–∏ –∫–æ–¥", lines=12, placeholder="–ß—Ç–æ –¥–µ–ª–∞–µ—Ç –∫–æ–º–ø–æ–Ω–µ–Ω—Ç Input?")
    run_btn = gr.Button("üöÄ –ó–∞–ø—É—Å—Ç–∏—Ç—å")
    output_md = gr.Markdown()

    run_btn.click(fn=run_analysis, inputs=[code_input], outputs=output_md)

demo.launch()

